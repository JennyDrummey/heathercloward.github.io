#navHeader {
  background-color: rgb(25, 00, 51);
  
}

#headerNav a {
  font-size: 1.1rem;
}

#dataInsiders {
  width: 100%;

}

#mainImg {
  background-image: url("../images/synitiBkgrd.png");
  background-size: cover;
  background-repeat: no-repeat;
}

#overlay {
  background-color: hsla(0,0%,100%,.79);
}

.uk-button-danger {
  background-color: #f44336;
}

.uk-button-danger:hover {
  background-color: #da190b;
}

#dspLogo {
  width: 6rem;
  height: 6rem;
}


@media only screen and (min-width: 1030px) {
  #welcome, #help, #dspLogo {
    display: inline-block;
  }

  #welcome {
    margin-left: 26%;
  }


}


/* Popup Modal Styling */

/********************************** Modal.js **********************************/
.menu.modal {
  display: block;
  background-color: #808080;
  background-color: rgba(0, 0, 0, 0.4);
  padding-top: 100px;
}
.menu.modal > .box {
  position: fixed;
  margin: -2% 0 0 11%;
  width: 200px;
  border: 1px solid #808080;
  border-radius: 5px;
  background-color: #FFFFFF;
  box-shadow: 0px 5px 5px #404040;
}
.menu.modal > .box > .content {
  padding: 1em;
}
/**************************************/
.go-top.modal.box {
display: block;
  position: fixed;
  bottom: 20px;
right: 30px;
  z-index: 1000;
}
.go-top.modal.box > .content {
  padding: 1em;
}
.go-top.modal.box > .content button {
  cursor: pointer;
  border: none;
  border-radius: 10px;
  outline: none;
  background-color: #4FADC6;
  padding: 15px;
  font-size: 18px;
  color: #FFFFFF;
}
/**************************************/
.popup.modal {
  display: block;
  background-color: #808080;
  background-color: rgba(0, 0, 0, 0.4);
}
.popup.modal > .box {
  margin: 1% auto;
width: 50%;
max-height: 90%;
  border: 1px solid #808080;
  border-radius: 5px;
  background-color: #FEFEFE;
box-shadow: 0px 5px 5px #404040;
overflow: auto;
}
.popup.modal > .box > .heading {
  border-style: solid;
  border-width: 0 0 1px 0;
  border-color: #CCCCCC;
  white-space: nowrap;
  text-align: center;
  font-weight: bold;
}
.popup.modal > .box > .content {
  overflow: auto;
  padding: 0em 2em;
font-size: 1em;
}

.popup.modal > .box > .content > :nth-child(2) { /* comment out this line if header is included */
/*.popup.modal > .box > .content > :first-child { /* comment out this line if header is not included */
  padding-top: 2em;
}
.popup.modal > .box > .content > :last-child {
  padding-bottom: 2em;
}
.popup.modal > .box .exit {
  margin: 2em 0em;
  width: 20px;
  height: 20px;
  border: solid 2px #CCCCCC;
  background-color: #FFFFFF;
  padding: 1px;
  color: #CCCCCC;
}
.popup.modal > .box .exit:hover,
.popup.modal > .box .exit:focus {
  cursor: pointer;
  border-style: outset;
  border-color: #000000;
  color: #000000;
}
.popup.modal > .box .exit:active {
  border-style: inset;
}

.modal
{
display: none;
position: fixed;
z-index: 1;
padding-top: 6.25em;
left: 0;
top: 0;
width: 100%;
height: 100%;
overflow: auto;
background-color: rgb(0,0,0);
background-color: rgba(0,0,0,0.4);
}

.modal-content
{
background-color: #fefefe;
margin: 20%;
padding: 4em;
border: 1px solid #888;
width: 50%;
margin-top: -5em;
padding-top: 2em;
}

.close
{
color: #aaaaaa;
float: right;
font-size: 2em;
font-weight: bold;
}

.close:hover,
.close:focus
{
color: #000;
text-decoration: none;
cursor: pointer;
}

.popUpLink
{
border: none;
background: none;
color: #39607a;
font-weight: bold;
cursor: pointer;
font-size: 1em;
}

/* These are the styles for the 'Use this page to' section of the page descriptions. A div with a class of "use" will need to be wrapped around
the p and ul (if there is one) in order for this to apply. */

div.use
{
	background-color: #ceebff;
	border-left: 6px solid #39607a;
	padding-left: 4em;
	margin-bottom: 2.00em;
}

div.use
{
	-webkit-margin-after: -1em;
}

div.use ul
{
	padding-bottom: 1.5em;
}

div.use:before
{
	content: "ðŸ—¹";
	font-size: 2em;
	line-height: 2;
	padding-right: .3em;
	margin-left: -1.5em;
}

/* Styling for the back to Top button that shows up in the bottom right corner of page when user scrolls down*/

#myBtn
{
	display: none;
	/* Hidden by default */
	position: fixed;
	/* Fixed/sticky position */
	bottom: 20px;
	/* Place the button at the bottom of the page */
	right: 30px;
	/* Place the button 30px from the right */
	z-index: 99;
	/* Make sure it does not overlap */
	border: none;
	/* Remove borders */
	outline: none;
	/* Remove outline */
	background-color: #4fadc6;
	/* Set a background color */
	color: white;
	/* Text color */
	cursor: pointer;
	/* Add a mouse pointer on hover */
	padding: 15px;
	/* Some padding */
	border-radius: 10px;
	/* Rounded corners */
	font-size: 18px;
	/* Increase font size */
}

#myBtn:hover
{
	background-color: #555;
	/* Add a dark-grey background on hover */
}

/* feedback widget styles */
/* Style the background of the feedback survey, making it blue with rounded edges and giving it some margin so it fits nicely on the page.*/

div#feedback-survey
{
	margin-left: 1em;
	background-color: #ceebff;
	padding: 2em;
	width: 86%;
	border-radius: 1em;
	padding-top: 1em;
	margin-top: 2em;
}

/* Feedback Widget text styling. */

.feedbackW
{
	font-size: 1.5em;
	font-weight: normal;
	-webkit-margin-before: 1em;
	-webkit-margin-after: .4em;
}

/* Class that keeps the feedback reason options hidden until user clicks the no button. */

.feedback-reason
{
	display: none;
}

/* Styling for the content when the user clicks the no button. */

.feedback-reason.no
{
	padding: 1em;
	width: 98%;
	padding-top: .1em;
}

/* Feedback Widget text styling. */

div.feedback-question
{
	color: #39607a;
	font-size: 1.5em;
}

/* Styling for the feedback buttons. */

button.feedback-yes
{
	background-color: #20aa97;
	/* green*/

	border: none;
	color: #fafafa;
	padding: 1em 2em;
	font-size: .7em;
	margin-left: 1em;
}

button.feedback-yes:hover
{
	background-color: #179080;
	/* slightly darker green*/

	cursor: pointer;
}

button.feedback-no
{
	background-color: #ee3124;
	/* red*/

	border: none;
	color: #fafafa;
	padding: 1em 2em;
	font-size: .7em;
	margin-left: 1em;
}

button.feedback-no:hover
{
	background-color: #ca2b20;
	/* slightly darker red*/

	cursor: pointer;
}
